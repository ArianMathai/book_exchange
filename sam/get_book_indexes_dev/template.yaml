AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  get_book_indexes_dev

Globals:
  Function:
    Timeout: 10
    LoggingConfig:
      LogFormat: JSON

Parameters:
  CognitoUserPoolId:
    Type: String
    Description: Cognito user pool for authentication
    Default: "eu-north-1_Cpr2QKIBI"

Resources:
  GetBooksApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors:
        AllowMethods: "'POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPoolId}"

  GetBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_book_indexes_dev/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          SECRET_NAME: "NeonDatabaseUrlDev"
          REGION: "eu-north-1"
      Events:
        GetBooks:
          Type: Api
          Properties:
            RestApiId: !Ref GetBooksApi
            Path: /books/search
            Method: post
            Auth:
              Authorizer: CognitoAuthorizer
        GetBooksOptions:
          Type: Api
          Properties:
            RestApiId: !Ref GetBooksApi
            Path: /books/search
            Method: options
            Auth:
              Authorizer: NONE
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:NeonDatabaseUrlDev-*"

Outputs:
  GetBooksApi:
    Description: API Gateway endpoint for searching books
    Value: !Sub "https://${GetBooksApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/books/search"
  GetBooksFunction:
    Description: Lambda function ARN for book search
    Value: !GetAtt GetBooksFunction.Arn
  GetBooksFunctionIamRole:
    Description: IAM Role for Lambda function
    Value: !GetAtt GetBooksFunctionRole.Arn
